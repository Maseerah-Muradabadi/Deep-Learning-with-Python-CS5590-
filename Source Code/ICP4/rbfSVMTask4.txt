from sklearn.model_selection import train_test_split
import pandas as pd
from sklearn import metrics
from sklearn.svm import SVC

# Import clean data
path = './glass.csv'
df = pd.read_csv(path)
# define target column
y_data = df['Type']
x_data = df.drop('Type', axis=1)

# split data into training and testing and print the number of samples in each
x_train_1, x_test_1, y_train_1, y_test_1 = train_test_split(x_data, y_data, test_size=0.30, random_state=0)
print("number of test samples :", x_test_1.shape[0])
print("number of training samples:", x_train_1.shape[0])

# fitting linear SVM classifier on training data and predicting performance on testing data
svc = SVC(kernel='rbf')
svc.fit(x_train_1, y_train_1)
Y_pred = svc.predict(x_test_1)
acc_svc = round(svc.score(x_train_1, y_train_1) * 100, 2)
print("svm accuracy is:", acc_svc)
print("Classification report is: \n", metrics.classification_report(y_test_1, Y_pred))
print("Confusion matrix is : \n", metrics.confusion_matrix(y_test_1, Y_pred))